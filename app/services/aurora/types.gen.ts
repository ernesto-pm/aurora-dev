// This file is auto-generated by @hey-api/openapi-ts

/**
 * AssociateAssistantWithMemoryBlockBody
 */
export type AssociateAssistantWithMemoryBlockBody = {
    /**
     * Memoryblockid
     */
    memoryBlockId: string;
    /**
     * Assistantid
     */
    assistantId: string;
};

/**
 * AuroraAssistant
 */
export type AuroraAssistant = {
    /**
     * Id
     */
    id: string;
    /**
     * Assistant Name
     */
    assistant_name: string;
    /**
     * Assistant Description
     */
    assistant_description: string;
    /**
     * System Prompt
     */
    system_prompt: string;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * AuroraBusiness
 */
export type AuroraBusiness = {
    /**
     * Id
     */
    id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Url Encoded Name
     */
    url_encoded_name: string | null;
    /**
     * Type
     */
    type: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string | null;
};

/**
 * AuroraBusinessDetail
 */
export type AuroraBusinessDetail = {
    /**
     * Id
     */
    id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Industry
     */
    industry: string | null;
    /**
     * Category
     */
    category: string | null;
    /**
     * Business Description
     */
    business_description: string | null;
    /**
     * Country
     */
    country: string | null;
    /**
     * City
     */
    city: string | null;
    /**
     * Address
     */
    address: string | null;
    /**
     * Location Type
     */
    location_type: string | null;
    /**
     * Business Goals
     */
    business_goals: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string | null;
    /**
     * Business Id
     */
    business_id: string;
};

/**
 * AuroraBusinessOrder
 */
export type AuroraBusinessOrder = {
    /**
     * Id
     */
    id: string;
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Source Name
     */
    source_name: unknown;
    /**
     * Order Id
     */
    order_id: string;
    /**
     * Order Line Id
     */
    order_line_id: string;
    /**
     * Order Name
     */
    order_name: string;
    /**
     * Date Order
     */
    date_order: string;
    /**
     * Partner Id
     */
    partner_id: string;
    /**
     * Amount Total
     */
    amount_total: string;
    /**
     * Product Id
     */
    product_id: string;
    /**
     * Product Description
     */
    product_description: string;
    /**
     * Product Quantity
     */
    product_quantity: number;
    /**
     * Product Name
     */
    product_name: string | null;
    /**
     * Subtotal
     */
    subtotal: string;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * AuroraChat
 */
export type AuroraChat = {
    /**
     * Id
     */
    id: string;
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Business Data Source Id
     */
    business_data_source_id: string;
    /**
     * Assistant Id
     */
    assistant_id: string;
    /**
     * Llm Model
     */
    llm_model: string;
    /**
     * Display Name
     */
    display_name: string | null;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * AuroraChatLlmModel
 */
export type AuroraChatLlmModel = {
    /**
     * Id
     */
    id: string;
    /**
     * Model Key
     */
    model_key: unknown;
    /**
     * Display Name
     */
    display_name: string;
    /**
     * Internal Name
     */
    internal_name: string;
    /**
     * Description
     */
    description: string;
};

/**
 * AuroraChatMessage
 */
export type AuroraChatMessage = {
    /**
     * Id
     */
    id: string;
    /**
     * Chat Id
     */
    chat_id: string;
    /**
     * Role
     */
    role: string;
    /**
     * Content
     */
    content: string;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * AuroraDashboard
 */
export type AuroraDashboard = {
    /**
     * Id
     */
    id: string;
    /**
     * Business Data Source Id
     */
    business_data_source_id: string;
    /**
     * Display Name
     */
    display_name: string | null;
    /**
     * Layout
     */
    layout: unknown;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * AuroraLettaIntegrationAssistantMemoryBlockTemplateAssociation
 */
export type AuroraLettaIntegrationAssistantMemoryBlockTemplateAssociation = {
    /**
     * Id
     */
    id: string;
    /**
     * Memory Block Id
     */
    memory_block_id: string | null;
    /**
     * Assistant Template Id
     */
    assistant_template_id: string | null;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * AuroraLettaIntegrationAssistantTemplate
 */
export type AuroraLettaIntegrationAssistantTemplate = {
    /**
     * Id
     */
    id: string;
    /**
     * Label
     */
    label: string;
    /**
     * System Prompt
     */
    system_prompt: string;
    /**
     * Model Name
     */
    model_name: string;
    /**
     * Temperature
     */
    temperature: string | null;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * AuroraLettaIntegrationMemoryBlockTemplate
 */
export type AuroraLettaIntegrationMemoryBlockTemplate = {
    /**
     * Id
     */
    id: string;
    /**
     * Label
     */
    label: string;
    /**
     * Description
     */
    description: string;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * AuroraMaProduct
 */
export type AuroraMaProduct = {
    /**
     * Id
     */
    id: string;
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Price Tlalpan
     */
    price_tlalpan: string | null;
    /**
     * Price Xochimilco
     */
    price_xochimilco: string | null;
    /**
     * Product Name
     */
    product_name: string | null;
    /**
     * Unit Type
     */
    unit_type: string | null;
    /**
     * Presentation
     */
    presentation: string | null;
};

/**
 * AuroraUser
 */
export type AuroraUser = {
    /**
     * Id
     */
    id: string;
    /**
     * Full Name
     */
    full_name: string | null;
    /**
     * Email
     */
    email: string;
    /**
     * Email Verified
     */
    email_verified: string | null;
    /**
     * Password
     */
    password: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string | null;
    /**
     * Is Admin
     */
    is_admin: boolean;
};

/**
 * AuroraUsersBusinessesAccess
 */
export type AuroraUsersBusinessesAccess = {
    /**
     * User Id
     */
    user_id: string | null;
    /**
     * Supabase User Id
     */
    supabase_user_id: string | null;
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * AuroraVisit
 */
export type AuroraVisit = {
    /**
     * Id
     */
    id: string;
    /**
     * Ip Address
     */
    ip_address: string | null;
    /**
     * Ip Version
     */
    ip_version: string | null;
    /**
     * Created At
     */
    created_at: string | null;
};

/**
 * Body_load_addresses_with_params
 */
export type BodyLoadAddressesWithParams = {
    /**
     * File
     * CSV file with customers
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_customers
 */
export type BodyLoadCustomers = {
    /**
     * File
     * CSV file with orders
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_customers_with_params
 */
export type BodyLoadCustomersWithParams = {
    /**
     * File
     * CSV file with customers
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_line_items
 */
export type BodyLoadLineItems = {
    /**
     * File
     * CSV file with line items
     */
    file: Blob | File;
};

/**
 * Body_load_line_items_with_params
 */
export type BodyLoadLineItemsWithParams = {
    /**
     * File
     * CSV file with line items
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_order_line_items
 */
export type BodyLoadOrderLineItems = {
    /**
     * File
     * CSV file with orders
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_orders
 */
export type BodyLoadOrders = {
    /**
     * File
     * CSV file with orders
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_orders_with_params
 */
export type BodyLoadOrdersWithParams = {
    /**
     * File
     * CSV file with orders
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_postal_code_mapping
 */
export type BodyLoadPostalCodeMapping = {
    /**
     * File
     * CSV file with addresses
     */
    file: Blob | File;
};

/**
 * Body_load_product_variants_with_params
 */
export type BodyLoadProductVariantsWithParams = {
    /**
     * File
     * CSV file with product variants
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_products
 */
export type BodyLoadProducts = {
    /**
     * File
     * CSV file with orders
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_products_with_params
 */
export type BodyLoadProductsWithParams = {
    /**
     * File
     * CSV file with products
     */
    file: Blob | File;
    /**
     * Business Id
     * The business_id to add to the data
     */
    business_id: string;
    /**
     * Data Source Id
     * The data source_id to add to the data
     */
    data_source_id: string;
};

/**
 * Body_load_raw_line_items
 */
export type BodyLoadRawLineItems = {
    /**
     * File
     * CSV file with line items
     */
    file: Blob | File;
};

/**
 * Body_load_raw_orders
 */
export type BodyLoadRawOrders = {
    /**
     * File
     * CSV file with orders
     */
    file: Blob | File;
};

/**
 * Body_load_raw_products
 */
export type BodyLoadRawProducts = {
    /**
     * File
     * CSV file with products
     */
    file: Blob | File;
};

/**
 * Body_load_shopify_addresses
 */
export type BodyLoadShopifyAddresses = {
    /**
     * File
     * CSV file with addresses
     */
    file: Blob | File;
};

/**
 * Body_load_shopify_customers
 */
export type BodyLoadShopifyCustomers = {
    /**
     * File
     * CSV file with customers
     */
    file: Blob | File;
};

/**
 * Body_load_shopify_orders
 */
export type BodyLoadShopifyOrders = {
    /**
     * File
     * CSV file with orders
     */
    file: Blob | File;
};

/**
 * Body_load_shopify_product_variants
 */
export type BodyLoadShopifyProductVariants = {
    /**
     * File
     * CSV file with product variants
     */
    file: Blob | File;
};

/**
 * Body_load_shopify_products
 */
export type BodyLoadShopifyProducts = {
    /**
     * File
     * CSV file with products
     */
    file: Blob | File;
};

/**
 * CreateBusinessBody
 */
export type CreateBusinessBody = {
    /**
     * Businessname
     */
    businessName: string;
    /**
     * Industry
     */
    industry: string;
    /**
     * Country
     */
    country: string;
    /**
     * Businessdescription
     */
    businessDescription: string;
    /**
     * Businessgoals
     */
    businessGoals: string;
    /**
     * City
     */
    city?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Type
     */
    type?: string | null;
    /**
     * Category
     */
    category?: string | null;
    /**
     * Locationtype
     */
    locationType?: string | null;
};

/**
 * CreateBusinessResponse
 */
export type CreateBusinessResponse = {
    business: AuroraBusiness;
    businessDetails: AuroraBusinessDetail;
    businessAccess: AuroraUsersBusinessesAccess;
};

/**
 * CreateChatBody
 */
export type CreateChatBody = {
    /**
     * Businessid
     */
    businessId: string;
    /**
     * Businessdatasourceid
     */
    businessDataSourceId: string;
    /**
     * Assistantid
     */
    assistantId: string;
    /**
     * Llmmodelid
     */
    llmModelId: string;
    /**
     * Displayname
     */
    displayName: string;
};

/**
 * CreateNewAssistantTemplateBody
 */
export type CreateNewAssistantTemplateBody = {
    /**
     * Label
     */
    label: string;
    /**
     * Systemprompt
     */
    systemPrompt: string;
    /**
     * Modelname
     */
    modelName: string;
    /**
     * Temperature
     */
    temperature: number;
};

/**
 * CreateNewMemoryBlockTemplateBody
 */
export type CreateNewMemoryBlockTemplateBody = {
    /**
     * Label
     */
    label: string;
    /**
     * Description
     */
    description: string;
};

/**
 * DeleteAssistantTemplateBody
 */
export type DeleteAssistantTemplateBody = {
    /**
     * Assistantid
     */
    assistantId: string;
};

/**
 * ErrorResponse
 */
export type ErrorResponse = {
    /**
     * Detail
     */
    detail: string;
};

/**
 * GeneralAssistantChatCompletionBody
 */
export type GeneralAssistantChatCompletionBody = {
    /**
     * Newusermessage
     */
    newUserMessage: string;
    /**
     * Chatid
     */
    chatId: string;
    /**
     * Debug
     */
    debug?: boolean;
};

/**
 * GeoCodeAddressesBody
 */
export type GeoCodeAddressesBody = {
    /**
     * Businessid
     */
    businessId: string;
};

/**
 * GetAllAppsForSupabaseUserRow
 */
export type GetAllAppsForSupabaseUserRow = {
    /**
     * Id
     */
    id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Unique Identifier
     */
    unique_identifier: string;
    /**
     * Description
     */
    description: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Business Name
     */
    business_name: string;
};

/**
 * GetAllChatsForSupabaseUserRow
 */
export type GetAllChatsForSupabaseUserRow = {
    /**
     * Id
     */
    id: string;
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Business Data Source Id
     */
    business_data_source_id: string;
    /**
     * Assistant Id
     */
    assistant_id: string;
    /**
     * Llm Model
     */
    llm_model: string;
    /**
     * Display Name
     */
    display_name: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Business Name
     */
    business_name: string;
    /**
     * Data Source Name
     */
    data_source_name: string;
};

/**
 * GetAllDashboardsForSupabaseUserIdRow
 */
export type GetAllDashboardsForSupabaseUserIdRow = {
    /**
     * Id
     */
    id: string;
    /**
     * Business Data Source Id
     */
    business_data_source_id: string;
    /**
     * Display Name
     */
    display_name: string | null;
    /**
     * Layout
     */
    layout: unknown;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Business Name
     */
    business_name: string;
    /**
     * Data Source Display Name
     */
    data_source_display_name: string;
};

/**
 * GetAllExtendedMaOrdersRow
 */
export type GetAllExtendedMaOrdersRow = {
    /**
     * Id
     */
    id: string;
    /**
     * Order Id
     */
    order_id: string;
    /**
     * Date Order
     */
    date_order: string;
    /**
     * Quantity
     */
    quantity: string;
    /**
     * Business Name
     */
    business_name: string;
    /**
     * Product Name
     */
    product_name: string | null;
    /**
     * Unit Type
     */
    unit_type: string | null;
    /**
     * Presentation
     */
    presentation: string | null;
};

/**
 * GetAllLineItemsBody
 */
export type GetAllLineItemsBody = {
    /**
     * Afterdate
     */
    afterDate?: string | null;
};

/**
 * GetAllMemoryBlocksForAssistantTemplate
 */
export type GetAllMemoryBlocksForAssistantTemplate = {
    /**
     * Assistantid
     */
    assistantId: string;
};

/**
 * GetAllOrdersBody
 */
export type GetAllOrdersBody = {
    /**
     * Afterdate
     */
    afterDate?: string | null;
};

/**
 * GetBusinessDataSourceConnectionsForSupabaseUserRow
 */
export type GetBusinessDataSourceConnectionsForSupabaseUserRow = {
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Business Name
     */
    business_name: string;
    /**
     * Data Source Display Name
     */
    data_source_display_name: string | null;
    /**
     * Data Source Name
     */
    data_source_name: string | null;
    /**
     * Connection Id
     */
    connection_id: string | null;
    /**
     * Data Source Id
     */
    data_source_id: string | null;
    /**
     * Is Data Source Active
     */
    is_data_source_active: boolean | null;
};

/**
 * GetBusinessesForUserBody
 */
export type GetBusinessesForUserBody = {
    /**
     * Userid
     */
    userId: string;
};

/**
 * GetOrderRevenuePerMonthBody
 */
export type GetOrderRevenuePerMonthBody = {
    /**
     * Dashboardid
     */
    dashboardId: string;
};

/**
 * GetOrderRevenuePerMonthResponse
 */
export type GetOrderRevenuePerMonthResponse = {
    /**
     * Horizontalaxisvalues
     */
    horizontalAxisValues: Array<string>;
    /**
     * Verticalaxisvalues
     */
    verticalAxisValues: Array<number>;
    horizontalAxisType: WidgetAxisTypeEnum;
    verticalAxisType: WidgetAxisTypeEnum;
};

/**
 * GetOrderVelocityBody
 */
export type GetOrderVelocityBody = {
    /**
     * Dashboardid
     */
    dashboardId: string;
};

/**
 * GetOrderVelocityResponse
 */
export type GetOrderVelocityResponse = {
    /**
     * Ordercounts
     */
    orderCounts: Array<number>;
    /**
     * Movingavgs
     */
    movingAvgs: Array<number>;
    /**
     * Categories
     */
    categories: Array<string>;
};

/**
 * GetRevenueConcentrationBody
 */
export type GetRevenueConcentrationBody = {
    /**
     * Dashboardid
     */
    dashboardId: string;
};

/**
 * GetRevenueConcentrationResponse
 */
export type GetRevenueConcentrationResponse = {
    /**
     * Revenues
     */
    revenues: Array<number>;
    /**
     * Cumulativepercentages
     */
    cumulativePercentages: Array<number>;
    /**
     * Categories
     */
    categories: Array<string>;
};

/**
 * GetSalesPerMonthBody
 */
export type GetSalesPerMonthBody = {
    /**
     * Dashboardid
     */
    dashboardId: string;
};

/**
 * GetSalesPerMonthResponse
 */
export type GetSalesPerMonthResponse = {
    /**
     * Horizontalaxisvalues
     */
    horizontalAxisValues: Array<string>;
    /**
     * Verticalaxisvalues
     */
    verticalAxisValues: Array<number>;
    horizontalAxisType: WidgetAxisTypeEnum;
    verticalAxisType: WidgetAxisTypeEnum;
};

/**
 * GetTotalItemsForProductsWithoutVariantsBody
 */
export type GetTotalItemsForProductsWithoutVariantsBody = {
    /**
     * Dashboardid
     */
    dashboardId: string;
    /**
     * Orderstate
     */
    orderState?: string;
    /**
     * Limit
     */
    limit?: number;
};

/**
 * GetTotalItemsForVariantsBody
 */
export type GetTotalItemsForVariantsBody = {
    /**
     * Dashboardid
     */
    dashboardId: string;
    /**
     * Orderstate
     */
    orderState?: string;
    /**
     * Limit
     */
    limit?: number;
};

/**
 * GetTotalSalesPerProductAndVariantsBody
 */
export type GetTotalSalesPerProductAndVariantsBody = {
    /**
     * Dashboardid
     */
    dashboardId: string;
    /**
     * Orderstate
     */
    orderState?: string;
};

/**
 * GetTotalsForProductsAndVariantsBody
 */
export type GetTotalsForProductsAndVariantsBody = {
    /**
     * Dashboardid
     */
    dashboardId: string;
    /**
     * Orderstate
     */
    orderState?: string;
    /**
     * Limit
     */
    limit?: number;
};

/**
 * GrantAccessForSupabaseUserEmail
 */
export type GrantAccessForSupabaseUserEmail = {
    /**
     * Businessid
     */
    businessId: string;
    /**
     * Supabaseuseremail
     */
    supabaseUserEmail: string;
};

/**
 * GrantAccessToBusinessForUserBody
 */
export type GrantAccessToBusinessForUserBody = {
    /**
     * Business Id
     */
    business_id: string;
    /**
     * User Id
     */
    user_id: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * InsertExternalBusinessCostumerParams
 */
export type InsertExternalBusinessCostumerParams = {
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Source Name
     */
    source_name: unknown;
    /**
     * External Source Id
     */
    external_source_id: string | null;
    /**
     * Full Name
     */
    full_name: string | null;
    /**
     * Address
     */
    address: string | null;
    /**
     * City
     */
    city: string | null;
    /**
     * Country
     */
    country: string | null;
    /**
     * State
     */
    state: string | null;
    /**
     * Phone
     */
    phone: string | null;
    /**
     * Email
     */
    email: string | null;
    /**
     * Zip
     */
    zip: string | null;
    /**
     * Lang
     */
    lang: string | null;
};

/**
 * InsertExternalOdooBusinessOrderParams
 */
export type InsertExternalOdooBusinessOrderParams = {
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Source Name
     */
    source_name: unknown;
    /**
     * Order Id
     */
    order_id: string;
    /**
     * Order Line Id
     */
    order_line_id: string;
    /**
     * Order Name
     */
    order_name: string;
    /**
     * Date Order
     */
    date_order: string;
    /**
     * Partner Id
     */
    partner_id: string;
    /**
     * Amount Total
     */
    amount_total: number | string;
    /**
     * Product Id
     */
    product_id: string;
    /**
     * Product Description
     */
    product_description: string;
    /**
     * Product Quantity
     */
    product_quantity: number;
    /**
     * Subtotal
     */
    subtotal: number | string;
};

/**
 * InsertMaProductForBusinessBody
 */
export type InsertMaProductForBusinessBody = {
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Product Name
     */
    product_name: string;
    /**
     * Price Talpan
     */
    price_talpan: number | null;
    /**
     * Price Xochimilco
     */
    price_xochimilco: number | null;
    /**
     * Unit Type
     */
    unit_type: string | null;
    /**
     * Presentation
     */
    presentation: string | null;
};

/**
 * LoginBody
 */
export type LoginBody = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * MASale
 */
export type MaSale = {
    /**
     * Id
     */
    id: string;
    /**
     * Businessid
     */
    businessId: string;
    /**
     * Maproductid
     */
    maProductId: string;
    /**
     * Orderid
     */
    orderId: string;
    /**
     * Dateorder
     */
    dateOrder: string;
    /**
     * Quantity
     */
    quantity: number | string;
};

/**
 * MA_GetAllLineItemsRow
 */
export type MaGetAllLineItemsRow = {
    /**
     * Id
     */
    id: string;
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Ma Product Id
     */
    ma_product_id: string;
    /**
     * Order Id
     */
    order_id: string;
    /**
     * Date Order
     */
    date_order: string;
    /**
     * Quantity
     */
    quantity: string;
    /**
     * Price Unit
     */
    price_unit: string | null;
    /**
     * Line Subtotal
     */
    line_subtotal: number;
};

/**
 * MA_GetAllOrdersRow
 */
export type MaGetAllOrdersRow = {
    /**
     * Order Id
     */
    order_id: string;
    /**
     * Date Order
     */
    date_order: string;
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Total Items
     */
    total_items: number;
    /**
     * Order Amount Total
     */
    order_amount_total: number;
};

/**
 * MA_GetAllProductsRow
 */
export type MaGetAllProductsRow = {
    /**
     * Id
     */
    id: string;
    /**
     * Business Id
     */
    business_id: string;
    /**
     * Product Name
     */
    product_name: string | null;
    /**
     * Unit Type
     */
    unit_type: string | null;
    /**
     * Presentation
     */
    presentation: string | null;
    /**
     * Price
     */
    price: string | null;
};

/**
 * NewConversationBody
 */
export type NewConversationBody = {
    /**
     * Businessid
     */
    businessId: string;
    /**
     * Userid
     */
    userId: string;
    /**
     * Language
     */
    language: string;
    /**
     * Assistanttypeid
     */
    assistantTypeId: string;
};

/**
 * OrdersPerMonthRequest
 */
export type OrdersPerMonthRequest = {
    /**
     * Businessid
     */
    businessId: string;
};

/**
 * POC_GetTotalItemsForProductsWithoutVariantsRow
 */
export type PocGetTotalItemsForProductsWithoutVariantsRow = {
    /**
     * Product Id
     */
    product_id: string | null;
    /**
     * Product Name
     */
    product_name: string | null;
    /**
     * Total Sales
     */
    total_sales: number;
    /**
     * Percentage Of Total
     */
    percentage_of_total: string;
};

/**
 * POC_GetTotalItemsForVariantsRow
 */
export type PocGetTotalItemsForVariantsRow = {
    /**
     * Variant Id
     */
    variant_id: string;
    /**
     * Variant Name
     */
    variant_name: string | null;
    /**
     * Total Sales
     */
    total_sales: number;
    /**
     * Percentage Of Total
     */
    percentage_of_total: string;
};

/**
 * POC_GetTotalSalesPerProductAndVariantsRow
 */
export type PocGetTotalSalesPerProductAndVariantsRow = {
    /**
     * Sum Quantity
     */
    sum_quantity: number;
    /**
     * Variant Name
     */
    variant_name: string | null;
    /**
     * Product Name
     */
    product_name: string | null;
};

/**
 * POC_TotalsForProductsAndVariantsRow
 */
export type PocTotalsForProductsAndVariantsRow = {
    /**
     * Product Name
     */
    product_name: string | null;
    /**
     * Variant Name
     */
    variant_name: string;
    /**
     * Total Sales
     */
    total_sales: number;
    /**
     * Percentage Of Total
     */
    percentage_of_total: string;
};

/**
 * RegisterSalesForMaBody
 */
export type RegisterSalesForMaBody = {
    /**
     * Sales
     */
    sales: Array<MaSale>;
};

/**
 * SignupStandardUserBody
 */
export type SignupStandardUserBody = {
    /**
     * Fullname
     */
    fullName: string;
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * TestNewMessageBody
 */
export type TestNewMessageBody = {
    /**
     * Assistanttypeid
     */
    assistantTypeId: string;
    /**
     * Businessid
     */
    businessId: string;
};

/**
 * UpdateDashboardLayoutBody
 */
export type UpdateDashboardLayoutBody = {
    /**
     * Dashboardid
     */
    dashboardId: string;
    /**
     * Layout
     */
    layout: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * WidgetAxisTypeEnum
 */
export type WidgetAxisTypeEnum = 'category' | 'value' | 'time';

export type GetAllAssistantsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/assistants/';
};

export type GetAllAssistantsResponses = {
    /**
     * Response Get All Assistants
     * Successful Response
     */
    200: Array<AuroraAssistant>;
};

export type GetAllAssistantsResponse = GetAllAssistantsResponses[keyof GetAllAssistantsResponses];

export type GetAllBusinessesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/businesses/';
};

export type GetAllBusinessesResponses = {
    /**
     * Response Get All Businesses
     * Successful Response
     */
    200: Array<AuroraBusiness>;
};

export type GetAllBusinessesResponse = GetAllBusinessesResponses[keyof GetAllBusinessesResponses];

export type CreateBusinessData = {
    body: CreateBusinessBody;
    path?: never;
    query?: never;
    url: '/businesses/';
};

export type CreateBusinessErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateBusinessError = CreateBusinessErrors[keyof CreateBusinessErrors];

export type CreateBusinessResponses = {
    /**
     * Successful Response
     */
    200: CreateBusinessResponse;
};

export type CreateBusinessResponse2 = CreateBusinessResponses[keyof CreateBusinessResponses];

export type GetBusinessesForUserData = {
    body: GetBusinessesForUserBody;
    path?: never;
    query?: never;
    url: '/businesses/for-user';
};

export type GetBusinessesForUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetBusinessesForUserError = GetBusinessesForUserErrors[keyof GetBusinessesForUserErrors];

export type GetBusinessesForUserResponses = {
    /**
     * Response Get Businesses For User
     * Successful Response
     */
    200: Array<AuroraBusiness>;
};

export type GetBusinessesForUserResponse = GetBusinessesForUserResponses[keyof GetBusinessesForUserResponses];

export type GetBusinessesForSupabaseUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/businesses/for-supabase-user';
};

export type GetBusinessesForSupabaseUserResponses = {
    /**
     * Response Get Businesses For Supabase User
     * Successful Response
     */
    200: Array<AuroraBusiness>;
};

export type GetBusinessesForSupabaseUserResponse = GetBusinessesForSupabaseUserResponses[keyof GetBusinessesForSupabaseUserResponses];

export type InsertExternalCustomerData = {
    body: InsertExternalBusinessCostumerParams;
    path?: never;
    query?: never;
    url: '/businesses/external-odoo-customer';
};

export type InsertExternalCustomerErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InsertExternalCustomerError = InsertExternalCustomerErrors[keyof InsertExternalCustomerErrors];

export type InsertExternalCustomerResponses = {
    /**
     * Successful Response
     */
    200: AuroraBusinessOrder;
};

export type InsertExternalCustomerResponse = InsertExternalCustomerResponses[keyof InsertExternalCustomerResponses];

export type InsertExternalOrderData = {
    body: InsertExternalOdooBusinessOrderParams;
    path?: never;
    query?: never;
    url: '/businesses/external-odoo-order';
};

export type InsertExternalOrderErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InsertExternalOrderError = InsertExternalOrderErrors[keyof InsertExternalOrderErrors];

export type InsertExternalOrderResponses = {
    /**
     * Response Insert External Order
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type InsertExternalOrderResponse = InsertExternalOrderResponses[keyof InsertExternalOrderResponses];

export type GrantAccessForUserData = {
    body: GrantAccessToBusinessForUserBody;
    path?: never;
    query?: never;
    url: '/businesses/grant-access-for-user';
};

export type GrantAccessForUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GrantAccessForUserError = GrantAccessForUserErrors[keyof GrantAccessForUserErrors];

export type GrantAccessForUserResponses = {
    /**
     * Successful Response
     */
    200: AuroraUsersBusinessesAccess;
};

export type GrantAccessForUserResponse = GrantAccessForUserResponses[keyof GrantAccessForUserResponses];

export type GrantAccessForSupabaseUserEmailData = {
    body: GrantAccessForSupabaseUserEmail;
    path?: never;
    query?: never;
    url: '/businesses/grant-access-for-supabase-user-email';
};

export type GrantAccessForSupabaseUserEmailErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GrantAccessForSupabaseUserEmailError = GrantAccessForSupabaseUserEmailErrors[keyof GrantAccessForSupabaseUserEmailErrors];

export type GrantAccessForSupabaseUserEmailResponses = {
    /**
     * Successful Response
     */
    200: AuroraUsersBusinessesAccess;
};

export type GrantAccessForSupabaseUserEmailResponse = GrantAccessForSupabaseUserEmailResponses[keyof GrantAccessForSupabaseUserEmailResponses];

export type FindBusinessWithEncodedNameData = {
    body?: never;
    path: {
        /**
         * Encoded Name
         */
        encoded_name: string;
    };
    query?: never;
    url: '/businesses/find-business-with-encoded-name/{encoded_name}';
};

export type FindBusinessWithEncodedNameErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FindBusinessWithEncodedNameError = FindBusinessWithEncodedNameErrors[keyof FindBusinessWithEncodedNameErrors];

export type FindBusinessWithEncodedNameResponses = {
    /**
     * Successful Response
     */
    200: AuroraBusiness;
};

export type FindBusinessWithEncodedNameResponse = FindBusinessWithEncodedNameResponses[keyof FindBusinessWithEncodedNameResponses];

export type GetBusinessesDataConnectionsForSupabaseUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/businesses/business-data-connections-for-supabase-user';
};

export type GetBusinessesDataConnectionsForSupabaseUserResponses = {
    /**
     * Response Get Businesses Data Connections For Supabase User
     * Successful Response
     */
    200: Array<GetBusinessDataSourceConnectionsForSupabaseUserRow>;
};

export type GetBusinessesDataConnectionsForSupabaseUserResponse = GetBusinessesDataConnectionsForSupabaseUserResponses[keyof GetBusinessesDataConnectionsForSupabaseUserResponses];

export type CreateChatData = {
    body: CreateChatBody;
    path?: never;
    query?: never;
    url: '/chats/';
};

export type CreateChatErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateChatError = CreateChatErrors[keyof CreateChatErrors];

export type CreateChatResponses = {
    /**
     * Successful Response
     */
    200: AuroraChat;
};

export type CreateChatResponse = CreateChatResponses[keyof CreateChatResponses];

export type GetAllChatsForSupabaseUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/chats/for-supabase-user';
};

export type GetAllChatsForSupabaseUserResponses = {
    /**
     * Response Get All Chats For Supabase User
     * Successful Response
     */
    200: Array<GetAllChatsForSupabaseUserRow>;
};

export type GetAllChatsForSupabaseUserResponse = GetAllChatsForSupabaseUserResponses[keyof GetAllChatsForSupabaseUserResponses];

export type GetAllAssistantBrainsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/chats/get-all-assistant-brains';
};

export type GetAllAssistantBrainsResponses = {
    /**
     * Response Get All Assistant Brains
     * Successful Response
     */
    200: Array<AuroraChatLlmModel>;
};

export type GetAllAssistantBrainsResponse = GetAllAssistantBrainsResponses[keyof GetAllAssistantBrainsResponses];

export type LoginUserData = {
    body: LoginBody;
    path?: never;
    query?: never;
    url: '/users/login';
};

export type LoginUserErrors = {
    /**
     * Invalid credentials
     */
    401: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginUserError = LoginUserErrors[keyof LoginUserErrors];

export type LoginUserResponses = {
    /**
     * Successfully authenticated user
     */
    200: AuroraUser;
};

export type LoginUserResponse = LoginUserResponses[keyof LoginUserResponses];

export type SignupStandardUserData = {
    body: SignupStandardUserBody;
    path?: never;
    query?: never;
    url: '/users/signup-standard-user';
};

export type SignupStandardUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SignupStandardUserError = SignupStandardUserErrors[keyof SignupStandardUserErrors];

export type SignupStandardUserResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAllUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/';
};

export type GetAllUsersResponses = {
    /**
     * Response Get All Users
     * Successful Response
     */
    200: Array<AuroraUser>;
};

export type GetAllUsersResponse = GetAllUsersResponses[keyof GetAllUsersResponses];

export type RegisterAuroraVisitData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/misc/register-visit';
};

export type RegisterAuroraVisitResponses = {
    /**
     * Successful Response
     */
    200: AuroraVisit;
};

export type RegisterAuroraVisitResponse = RegisterAuroraVisitResponses[keyof RegisterAuroraVisitResponses];

export type GetRecentVisitsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/misc/get-recent-visits';
};

export type GetRecentVisitsResponses = {
    /**
     * Response Get Recent Visits
     * Successful Response
     */
    200: Array<AuroraVisit>;
};

export type GetRecentVisitsResponse = GetRecentVisitsResponses[keyof GetRecentVisitsResponses];

export type InsertMaProductForBusinessData = {
    body: InsertMaProductForBusinessBody;
    path?: never;
    query?: never;
    url: '/mercadito-alternativo/insert-ma-product-for-business';
};

export type InsertMaProductForBusinessErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InsertMaProductForBusinessError = InsertMaProductForBusinessErrors[keyof InsertMaProductForBusinessErrors];

export type InsertMaProductForBusinessResponses = {
    /**
     * Successful Response
     */
    200: AuroraMaProduct;
};

export type InsertMaProductForBusinessResponse = InsertMaProductForBusinessResponses[keyof InsertMaProductForBusinessResponses];

export type GetMaProductsForBusinessData = {
    body?: never;
    path: {
        /**
         * Business Url Encoded Name
         */
        business_url_encoded_name: string;
    };
    query?: never;
    url: '/mercadito-alternativo/for-business/{business_url_encoded_name}';
};

export type GetMaProductsForBusinessErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMaProductsForBusinessError = GetMaProductsForBusinessErrors[keyof GetMaProductsForBusinessErrors];

export type GetMaProductsForBusinessResponses = {
    /**
     * Response Get Ma Products For Business
     * Successful Response
     */
    200: Array<AuroraMaProduct>;
};

export type GetMaProductsForBusinessResponse = GetMaProductsForBusinessResponses[keyof GetMaProductsForBusinessResponses];

export type RegisterSalesForMaData = {
    body: RegisterSalesForMaBody;
    path?: never;
    query?: never;
    url: '/mercadito-alternativo/register-sales';
};

export type RegisterSalesForMaErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterSalesForMaError = RegisterSalesForMaErrors[keyof RegisterSalesForMaErrors];

export type RegisterSalesForMaResponses = {
    /**
     * Response Register Sales For Ma
     * Successful Response
     */
    200: Array<string>;
};

export type RegisterSalesForMaResponse = RegisterSalesForMaResponses[keyof RegisterSalesForMaResponses];

export type GetMaProductsForBusinessSupabaseData = {
    body?: never;
    path: {
        /**
         * Business Url Encoded Name
         */
        business_url_encoded_name: string;
    };
    query?: never;
    url: '/mercadito-alternativo/for-business/{business_url_encoded_name}/supabase';
};

export type GetMaProductsForBusinessSupabaseErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMaProductsForBusinessSupabaseError = GetMaProductsForBusinessSupabaseErrors[keyof GetMaProductsForBusinessSupabaseErrors];

export type GetMaProductsForBusinessSupabaseResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AdminGetAllMaOrdersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/mercadito-alternativo/admin/get-all-ma-orders';
};

export type AdminGetAllMaOrdersResponses = {
    /**
     * Response Admin Get All Ma Orders
     * Successful Response
     */
    200: Array<GetAllExtendedMaOrdersRow>;
};

export type AdminGetAllMaOrdersResponse = AdminGetAllMaOrdersResponses[keyof AdminGetAllMaOrdersResponses];

export type CalculateMetricAnalysisData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/mercadito-alternativo/calculate-metric-analysis';
};

export type CalculateMetricAnalysisResponses = {
    /**
     * Response Calculate Metric Analysis
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type CalculateMetricAnalysisResponse = CalculateMetricAnalysisResponses[keyof CalculateMetricAnalysisResponses];

export type GetMaOrdersData = {
    body: GetAllOrdersBody;
    path?: never;
    query?: never;
    url: '/mercadito-alternativo/get-all-orders';
};

export type GetMaOrdersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMaOrdersError = GetMaOrdersErrors[keyof GetMaOrdersErrors];

export type GetMaOrdersResponses = {
    /**
     * Response Get Ma Orders
     * Successful Response
     */
    200: Array<MaGetAllOrdersRow>;
};

export type GetMaOrdersResponse = GetMaOrdersResponses[keyof GetMaOrdersResponses];

export type GetMaProductsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/mercadito-alternativo/get-all-products';
};

export type GetMaProductsResponses = {
    /**
     * Response Get Ma Products
     * Successful Response
     */
    200: Array<MaGetAllProductsRow>;
};

export type GetMaProductsResponse = GetMaProductsResponses[keyof GetMaProductsResponses];

export type GetLineItemsData = {
    body: GetAllLineItemsBody;
    path?: never;
    query?: never;
    url: '/mercadito-alternativo/get-all-line-items';
};

export type GetLineItemsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLineItemsError = GetLineItemsErrors[keyof GetLineItemsErrors];

export type GetLineItemsResponses = {
    /**
     * Response Get Line Items
     * Successful Response
     */
    200: Array<MaGetAllLineItemsRow>;
};

export type GetLineItemsResponse = GetLineItemsResponses[keyof GetLineItemsResponses];

export type NewConversationData = {
    body: NewConversationBody;
    path?: never;
    query?: never;
    url: '/conversations/';
};

export type NewConversationErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NewConversationError = NewConversationErrors[keyof NewConversationErrors];

export type NewConversationResponses = {
    /**
     * Response New Conversation
     * Successful Response
     */
    200: string;
};

export type NewConversationResponse = NewConversationResponses[keyof NewConversationResponses];

export type TestNewMessageData = {
    body: TestNewMessageBody;
    path?: never;
    query?: never;
    url: '/conversationstest-new-message';
};

export type TestNewMessageErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type TestNewMessageError = TestNewMessageErrors[keyof TestNewMessageErrors];

export type TestNewMessageResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadOrdersData = {
    body: BodyLoadOrders;
    path?: never;
    query?: never;
    url: '/pocs-for-data/load-orders';
};

export type LoadOrdersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadOrdersError = LoadOrdersErrors[keyof LoadOrdersErrors];

export type LoadOrdersResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadProductsData = {
    body: BodyLoadProducts;
    path?: never;
    query?: never;
    url: '/pocs-for-data/load-products';
};

export type LoadProductsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadProductsError = LoadProductsErrors[keyof LoadProductsErrors];

export type LoadProductsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadCustomersData = {
    body: BodyLoadCustomers;
    path?: never;
    query?: never;
    url: '/pocs-for-data/load-customers';
};

export type LoadCustomersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadCustomersError = LoadCustomersErrors[keyof LoadCustomersErrors];

export type LoadCustomersResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadOrderLineItemsData = {
    body: BodyLoadOrderLineItems;
    path?: never;
    query?: never;
    url: '/pocs-for-data/load-order-line-items';
};

export type LoadOrderLineItemsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadOrderLineItemsError = LoadOrderLineItemsErrors[keyof LoadOrderLineItemsErrors];

export type LoadOrderLineItemsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type OrdersPerMonthData = {
    body: OrdersPerMonthRequest;
    path?: never;
    query?: never;
    url: '/pocs-data-analysis/orders-per-month';
};

export type OrdersPerMonthErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OrdersPerMonthError = OrdersPerMonthErrors[keyof OrdersPerMonthErrors];

export type OrdersPerMonthResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GeocodeAddressesForBusinessesData = {
    body: GeoCodeAddressesBody;
    path?: never;
    query?: never;
    url: '/geo-data/geocode-addresses-for-businesses';
};

export type GeocodeAddressesForBusinessesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GeocodeAddressesForBusinessesError = GeocodeAddressesForBusinessesErrors[keyof GeocodeAddressesForBusinessesErrors];

export type GeocodeAddressesForBusinessesResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadPostalCodeMappingData = {
    body: BodyLoadPostalCodeMapping;
    path?: never;
    query?: never;
    url: '/geo-data/load-postal-code-mapping';
};

export type LoadPostalCodeMappingErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadPostalCodeMappingError = LoadPostalCodeMappingErrors[keyof LoadPostalCodeMappingErrors];

export type LoadPostalCodeMappingResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadShopifyAddressesData = {
    body: BodyLoadShopifyAddresses;
    path?: never;
    query?: never;
    url: '/shopify-data-ingestion/load-addresses';
};

export type LoadShopifyAddressesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadShopifyAddressesError = LoadShopifyAddressesErrors[keyof LoadShopifyAddressesErrors];

export type LoadShopifyAddressesResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadShopifyProductsData = {
    body: BodyLoadShopifyProducts;
    path?: never;
    query?: never;
    url: '/shopify-data-ingestion/load-products';
};

export type LoadShopifyProductsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadShopifyProductsError = LoadShopifyProductsErrors[keyof LoadShopifyProductsErrors];

export type LoadShopifyProductsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadShopifyProductVariantsData = {
    body: BodyLoadShopifyProductVariants;
    path?: never;
    query?: never;
    url: '/shopify-data-ingestion/load-product-variants';
};

export type LoadShopifyProductVariantsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadShopifyProductVariantsError = LoadShopifyProductVariantsErrors[keyof LoadShopifyProductVariantsErrors];

export type LoadShopifyProductVariantsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadShopifyCustomersData = {
    body: BodyLoadShopifyCustomers;
    path?: never;
    query?: never;
    url: '/shopify-data-ingestion/load-customers';
};

export type LoadShopifyCustomersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadShopifyCustomersError = LoadShopifyCustomersErrors[keyof LoadShopifyCustomersErrors];

export type LoadShopifyCustomersResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadShopifyOrdersData = {
    body: BodyLoadShopifyOrders;
    path?: never;
    query?: never;
    url: '/shopify-data-ingestion/load-orders';
};

export type LoadShopifyOrdersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadShopifyOrdersError = LoadShopifyOrdersErrors[keyof LoadShopifyOrdersErrors];

export type LoadShopifyOrdersResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadLineItemsData = {
    body: BodyLoadLineItems;
    path?: never;
    query?: never;
    url: '/shopify-data-ingestion/load-line-items';
};

export type LoadLineItemsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadLineItemsError = LoadLineItemsErrors[keyof LoadLineItemsErrors];

export type LoadLineItemsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAllMemoryBlockTemplatesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/memory-block-templates/';
};

export type GetAllMemoryBlockTemplatesResponses = {
    /**
     * Response Get All Memory Block Templates
     * Successful Response
     */
    200: Array<AuroraLettaIntegrationMemoryBlockTemplate>;
};

export type GetAllMemoryBlockTemplatesResponse = GetAllMemoryBlockTemplatesResponses[keyof GetAllMemoryBlockTemplatesResponses];

export type LettaCreateMemoryBlockTemplateData = {
    body: CreateNewMemoryBlockTemplateBody;
    path?: never;
    query?: never;
    url: '/memory-block-templates/';
};

export type LettaCreateMemoryBlockTemplateErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LettaCreateMemoryBlockTemplateError = LettaCreateMemoryBlockTemplateErrors[keyof LettaCreateMemoryBlockTemplateErrors];

export type LettaCreateMemoryBlockTemplateResponses = {
    /**
     * Successful Response
     */
    200: AuroraLettaIntegrationMemoryBlockTemplate;
};

export type LettaCreateMemoryBlockTemplateResponse = LettaCreateMemoryBlockTemplateResponses[keyof LettaCreateMemoryBlockTemplateResponses];

export type GetAllAssistantTemplatesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/assistant-templates/';
};

export type GetAllAssistantTemplatesResponses = {
    /**
     * Response Get All Assistant Templates
     * Successful Response
     */
    200: Array<AuroraLettaIntegrationAssistantTemplate>;
};

export type GetAllAssistantTemplatesResponse = GetAllAssistantTemplatesResponses[keyof GetAllAssistantTemplatesResponses];

export type LettaCreateAssistantTemplateData = {
    body: CreateNewAssistantTemplateBody;
    path?: never;
    query?: never;
    url: '/assistant-templates/';
};

export type LettaCreateAssistantTemplateErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LettaCreateAssistantTemplateError = LettaCreateAssistantTemplateErrors[keyof LettaCreateAssistantTemplateErrors];

export type LettaCreateAssistantTemplateResponses = {
    /**
     * Successful Response
     */
    200: AuroraLettaIntegrationAssistantTemplate;
};

export type LettaCreateAssistantTemplateResponse = LettaCreateAssistantTemplateResponses[keyof LettaCreateAssistantTemplateResponses];

export type AssociateAssistantWithMemoryBlockData = {
    body: AssociateAssistantWithMemoryBlockBody;
    path?: never;
    query?: never;
    url: '/assistant-templates/associate-with-memory-block';
};

export type AssociateAssistantWithMemoryBlockErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssociateAssistantWithMemoryBlockError = AssociateAssistantWithMemoryBlockErrors[keyof AssociateAssistantWithMemoryBlockErrors];

export type AssociateAssistantWithMemoryBlockResponses = {
    /**
     * Successful Response
     */
    200: AuroraLettaIntegrationAssistantMemoryBlockTemplateAssociation;
};

export type AssociateAssistantWithMemoryBlockResponse = AssociateAssistantWithMemoryBlockResponses[keyof AssociateAssistantWithMemoryBlockResponses];

export type GetAllMemoryBlocksForAssistantTemplatesData = {
    body: GetAllMemoryBlocksForAssistantTemplate;
    path?: never;
    query?: never;
    url: '/assistant-templates/get-all-memory-blocks-for-assistant-templates';
};

export type GetAllMemoryBlocksForAssistantTemplatesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllMemoryBlocksForAssistantTemplatesError = GetAllMemoryBlocksForAssistantTemplatesErrors[keyof GetAllMemoryBlocksForAssistantTemplatesErrors];

export type GetAllMemoryBlocksForAssistantTemplatesResponses = {
    /**
     * Response Get All Memory Blocks For Assistant Templates
     * Successful Response
     */
    200: Array<AuroraLettaIntegrationMemoryBlockTemplate>;
};

export type GetAllMemoryBlocksForAssistantTemplatesResponse = GetAllMemoryBlocksForAssistantTemplatesResponses[keyof GetAllMemoryBlocksForAssistantTemplatesResponses];

export type DeleteAssistantTemplateData = {
    body: DeleteAssistantTemplateBody;
    path?: never;
    query?: never;
    url: '/assistant-templates/delete-assistant-template';
};

export type DeleteAssistantTemplateErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteAssistantTemplateError = DeleteAssistantTemplateErrors[keyof DeleteAssistantTemplateErrors];

export type DeleteAssistantTemplateResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetDashboardsForSupabaseUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/dashboards/for-supabase-user';
};

export type GetDashboardsForSupabaseUserResponses = {
    /**
     * Response Get Dashboards For Supabase User
     * Successful Response
     */
    200: Array<GetAllDashboardsForSupabaseUserIdRow>;
};

export type GetDashboardsForSupabaseUserResponse = GetDashboardsForSupabaseUserResponses[keyof GetDashboardsForSupabaseUserResponses];

export type GetSalesPerMonthData = {
    body: GetSalesPerMonthBody;
    path?: never;
    query?: never;
    url: '/dashboards/get-sales-per-month';
};

export type GetSalesPerMonthErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSalesPerMonthError = GetSalesPerMonthErrors[keyof GetSalesPerMonthErrors];

export type GetSalesPerMonthResponses = {
    /**
     * Successful Response
     */
    200: GetSalesPerMonthResponse;
};

export type GetSalesPerMonthResponse2 = GetSalesPerMonthResponses[keyof GetSalesPerMonthResponses];

export type GetOrderRevenuePerMonthData = {
    body: GetOrderRevenuePerMonthBody;
    path?: never;
    query?: never;
    url: '/dashboards/get-order-revenue-per-month';
};

export type GetOrderRevenuePerMonthErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOrderRevenuePerMonthError = GetOrderRevenuePerMonthErrors[keyof GetOrderRevenuePerMonthErrors];

export type GetOrderRevenuePerMonthResponses = {
    /**
     * Successful Response
     */
    200: GetOrderRevenuePerMonthResponse;
};

export type GetOrderRevenuePerMonthResponse2 = GetOrderRevenuePerMonthResponses[keyof GetOrderRevenuePerMonthResponses];

export type GetTotalSalesPerProductAndVariantsData = {
    body: GetTotalSalesPerProductAndVariantsBody;
    path?: never;
    query?: never;
    url: '/dashboards/get-total-sales-per-product-and-variants';
};

export type GetTotalSalesPerProductAndVariantsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTotalSalesPerProductAndVariantsError = GetTotalSalesPerProductAndVariantsErrors[keyof GetTotalSalesPerProductAndVariantsErrors];

export type GetTotalSalesPerProductAndVariantsResponses = {
    /**
     * Response Get Total Sales Per Product And Variants
     * Successful Response
     */
    200: Array<PocGetTotalSalesPerProductAndVariantsRow>;
};

export type GetTotalSalesPerProductAndVariantsResponse = GetTotalSalesPerProductAndVariantsResponses[keyof GetTotalSalesPerProductAndVariantsResponses];

export type GetTotalItemsForProductsWithoutVariantsData = {
    body: GetTotalItemsForProductsWithoutVariantsBody;
    path?: never;
    query?: never;
    url: '/dashboards/get-total-items-for-products-without-variants';
};

export type GetTotalItemsForProductsWithoutVariantsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTotalItemsForProductsWithoutVariantsError = GetTotalItemsForProductsWithoutVariantsErrors[keyof GetTotalItemsForProductsWithoutVariantsErrors];

export type GetTotalItemsForProductsWithoutVariantsResponses = {
    /**
     * Response Get Total Items For Products Without Variants
     * Successful Response
     */
    200: Array<PocGetTotalItemsForProductsWithoutVariantsRow>;
};

export type GetTotalItemsForProductsWithoutVariantsResponse = GetTotalItemsForProductsWithoutVariantsResponses[keyof GetTotalItemsForProductsWithoutVariantsResponses];

export type GetTotalItemsForVariantsData = {
    body: GetTotalItemsForVariantsBody;
    path?: never;
    query?: never;
    url: '/dashboards/get-total-items-for-variants';
};

export type GetTotalItemsForVariantsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTotalItemsForVariantsError = GetTotalItemsForVariantsErrors[keyof GetTotalItemsForVariantsErrors];

export type GetTotalItemsForVariantsResponses = {
    /**
     * Response Get Total Items For Variants
     * Successful Response
     */
    200: Array<PocGetTotalItemsForVariantsRow>;
};

export type GetTotalItemsForVariantsResponse = GetTotalItemsForVariantsResponses[keyof GetTotalItemsForVariantsResponses];

export type GetTotalsForProductsAndVariantsData = {
    body: GetTotalsForProductsAndVariantsBody;
    path?: never;
    query?: never;
    url: '/dashboards/get-totals-for-products-and-variants';
};

export type GetTotalsForProductsAndVariantsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTotalsForProductsAndVariantsError = GetTotalsForProductsAndVariantsErrors[keyof GetTotalsForProductsAndVariantsErrors];

export type GetTotalsForProductsAndVariantsResponses = {
    /**
     * Response Get Totals For Products And Variants
     * Successful Response
     */
    200: Array<PocTotalsForProductsAndVariantsRow>;
};

export type GetTotalsForProductsAndVariantsResponse = GetTotalsForProductsAndVariantsResponses[keyof GetTotalsForProductsAndVariantsResponses];

export type GetRevenueConcentrationData = {
    body: GetRevenueConcentrationBody;
    path?: never;
    query?: never;
    url: '/dashboards/get-revenue-concentration';
};

export type GetRevenueConcentrationErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRevenueConcentrationError = GetRevenueConcentrationErrors[keyof GetRevenueConcentrationErrors];

export type GetRevenueConcentrationResponses = {
    /**
     * Successful Response
     */
    200: GetRevenueConcentrationResponse;
};

export type GetRevenueConcentrationResponse2 = GetRevenueConcentrationResponses[keyof GetRevenueConcentrationResponses];

export type GetOrderVelocityData = {
    body: GetOrderVelocityBody;
    path?: never;
    query?: never;
    url: '/dashboards/get-order-velocity';
};

export type GetOrderVelocityErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOrderVelocityError = GetOrderVelocityErrors[keyof GetOrderVelocityErrors];

export type GetOrderVelocityResponses = {
    /**
     * Successful Response
     */
    200: GetOrderVelocityResponse;
};

export type GetOrderVelocityResponse2 = GetOrderVelocityResponses[keyof GetOrderVelocityResponses];

export type UpdateDashboardLayoutData = {
    body: UpdateDashboardLayoutBody;
    path?: never;
    query?: never;
    url: '/dashboards/update-layout';
};

export type UpdateDashboardLayoutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateDashboardLayoutError = UpdateDashboardLayoutErrors[keyof UpdateDashboardLayoutErrors];

export type UpdateDashboardLayoutResponses = {
    /**
     * Successful Response
     */
    200: AuroraDashboard;
};

export type UpdateDashboardLayoutResponse = UpdateDashboardLayoutResponses[keyof UpdateDashboardLayoutResponses];

export type LoadRawOrdersData = {
    body: BodyLoadRawOrders;
    path?: never;
    query?: never;
    url: '/data-ingestion/load-raw-orders';
};

export type LoadRawOrdersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadRawOrdersError = LoadRawOrdersErrors[keyof LoadRawOrdersErrors];

export type LoadRawOrdersResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadRawLineItemsData = {
    body: BodyLoadRawLineItems;
    path?: never;
    query?: never;
    url: '/data-ingestion/load-raw-line-items';
};

export type LoadRawLineItemsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadRawLineItemsError = LoadRawLineItemsErrors[keyof LoadRawLineItemsErrors];

export type LoadRawLineItemsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadRawProductsData = {
    body: BodyLoadRawProducts;
    path?: never;
    query?: never;
    url: '/data-ingestion/load-raw-products';
};

export type LoadRawProductsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadRawProductsError = LoadRawProductsErrors[keyof LoadRawProductsErrors];

export type LoadRawProductsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadProductsWithParamsData = {
    body: BodyLoadProductsWithParams;
    path?: never;
    query?: never;
    url: '/data-ingestion/load-products-with-params';
};

export type LoadProductsWithParamsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadProductsWithParamsError = LoadProductsWithParamsErrors[keyof LoadProductsWithParamsErrors];

export type LoadProductsWithParamsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadProductVariantsWithParamsData = {
    body: BodyLoadProductVariantsWithParams;
    path?: never;
    query?: never;
    url: '/data-ingestion/load-product-variants-with-params';
};

export type LoadProductVariantsWithParamsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadProductVariantsWithParamsError = LoadProductVariantsWithParamsErrors[keyof LoadProductVariantsWithParamsErrors];

export type LoadProductVariantsWithParamsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadOrdersWithParamsData = {
    body: BodyLoadOrdersWithParams;
    path?: never;
    query?: never;
    url: '/data-ingestion/load-orders-with-params';
};

export type LoadOrdersWithParamsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadOrdersWithParamsError = LoadOrdersWithParamsErrors[keyof LoadOrdersWithParamsErrors];

export type LoadOrdersWithParamsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadLineItemsWithParamsData = {
    body: BodyLoadLineItemsWithParams;
    path?: never;
    query?: never;
    url: '/data-ingestion/load-line-items-with-params';
};

export type LoadLineItemsWithParamsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadLineItemsWithParamsError = LoadLineItemsWithParamsErrors[keyof LoadLineItemsWithParamsErrors];

export type LoadLineItemsWithParamsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadCustomersWithParamsData = {
    body: BodyLoadCustomersWithParams;
    path?: never;
    query?: never;
    url: '/data-ingestion/load-customers-with-params';
};

export type LoadCustomersWithParamsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadCustomersWithParamsError = LoadCustomersWithParamsErrors[keyof LoadCustomersWithParamsErrors];

export type LoadCustomersWithParamsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadAddressesWithParamsData = {
    body: BodyLoadAddressesWithParams;
    path?: never;
    query?: never;
    url: '/data-ingestion/load-addresses-with-params';
};

export type LoadAddressesWithParamsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoadAddressesWithParamsError = LoadAddressesWithParamsErrors[keyof LoadAddressesWithParamsErrors];

export type LoadAddressesWithParamsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GeneralAssistantChatCompletionData = {
    body: GeneralAssistantChatCompletionBody;
    path?: never;
    query?: never;
    url: '/chat-messages/general-assistant-chat-completion';
};

export type GeneralAssistantChatCompletionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GeneralAssistantChatCompletionError = GeneralAssistantChatCompletionErrors[keyof GeneralAssistantChatCompletionErrors];

export type GeneralAssistantChatCompletionResponses = {
    /**
     * Response General Assistant Chat Completion
     * Successful Response
     */
    200: Array<AuroraChatMessage>;
};

export type GeneralAssistantChatCompletionResponse = GeneralAssistantChatCompletionResponses[keyof GeneralAssistantChatCompletionResponses];

export type GetAllMessagesForChatData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Chatid
         */
        chatId: string;
    };
    url: '/chat-messages/get-all-messages-for-chat/{chat_id}';
};

export type GetAllMessagesForChatErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllMessagesForChatError = GetAllMessagesForChatErrors[keyof GetAllMessagesForChatErrors];

export type GetAllMessagesForChatResponses = {
    /**
     * Response Get All Messages For Chat
     * Successful Response
     */
    200: Array<AuroraChatMessage>;
};

export type GetAllMessagesForChatResponse = GetAllMessagesForChatResponses[keyof GetAllMessagesForChatResponses];

export type GetAllCustomAppsForSupabaseUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/custom-apps/for-supabase-user';
};

export type GetAllCustomAppsForSupabaseUserResponses = {
    /**
     * Response Get All Custom Apps For Supabase User
     * Successful Response
     */
    200: Array<GetAllAppsForSupabaseUserRow>;
};

export type GetAllCustomAppsForSupabaseUserResponse = GetAllCustomAppsForSupabaseUserResponses[keyof GetAllCustomAppsForSupabaseUserResponses];

export type ClientOptions = {
    baseURL: `${string}://${string}/aurora` | (string & {});
};