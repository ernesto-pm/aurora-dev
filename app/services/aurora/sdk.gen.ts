// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from './client';
import type { GetAllBusinessesData, GetAllBusinessesResponses, CreateBusinessData, CreateBusinessResponses, CreateBusinessErrors, GetBusinessesForUserData, GetBusinessesForUserResponses, GetBusinessesForUserErrors, GetBusinessesForSupabaseUserData, GetBusinessesForSupabaseUserResponses, InsertExternalCustomerData, InsertExternalCustomerResponses, InsertExternalCustomerErrors, InsertExternalOrderData, InsertExternalOrderResponses, InsertExternalOrderErrors, GrantAccessForUserData, GrantAccessForUserResponses, GrantAccessForUserErrors, FindBusinessWithEncodedNameData, FindBusinessWithEncodedNameResponses, FindBusinessWithEncodedNameErrors, GetLogoGenerationChatsForBusinessData, GetLogoGenerationChatsForBusinessResponses, GetLogoGenerationChatsForBusinessErrors, CreateLogoGenerationChatData, CreateLogoGenerationChatResponses, CreateLogoGenerationChatErrors, GetLogoGenerationChatData, GetLogoGenerationChatResponses, GetLogoGenerationChatErrors, LoginUserData, LoginUserResponses, LoginUserErrors, SignupStandardUserData, SignupStandardUserResponses, SignupStandardUserErrors, GetAllUsersData, GetAllUsersResponses, RegisterAuroraVisitData, RegisterAuroraVisitResponses, GetRecentVisitsData, GetRecentVisitsResponses, InsertMaProductForBusinessData, InsertMaProductForBusinessResponses, InsertMaProductForBusinessErrors, GetMaProductsForBusinessData, GetMaProductsForBusinessResponses, GetMaProductsForBusinessErrors, RegisterSalesForMaData, RegisterSalesForMaResponses, RegisterSalesForMaErrors, GetMaProductsForBusinessSupabaseData, GetMaProductsForBusinessSupabaseResponses, GetMaProductsForBusinessSupabaseErrors, AdminGetAllMaOrdersData, AdminGetAllMaOrdersResponses, CalculateMetricAnalysisData, CalculateMetricAnalysisResponses, NewConversationData, NewConversationResponses, NewConversationErrors, TestNewMessageData, TestNewMessageResponses, TestNewMessageErrors, LoadOrdersData, LoadOrdersResponses, LoadOrdersErrors, LoadProductsData, LoadProductsResponses, LoadProductsErrors, LoadCustomersData, LoadCustomersResponses, LoadCustomersErrors, LoadOrderLineItemsData, LoadOrderLineItemsResponses, LoadOrderLineItemsErrors, OrdersPerMonthData, OrdersPerMonthResponses, OrdersPerMonthErrors, GeocodeAddressesForBusinessesData, GeocodeAddressesForBusinessesResponses, GeocodeAddressesForBusinessesErrors, LoadPostalCodeMappingData, LoadPostalCodeMappingResponses, LoadPostalCodeMappingErrors, LoadShopifyAddressesData, LoadShopifyAddressesResponses, LoadShopifyAddressesErrors, LoadShopifyProductsData, LoadShopifyProductsResponses, LoadShopifyProductsErrors, LoadShopifyProductVariantsData, LoadShopifyProductVariantsResponses, LoadShopifyProductVariantsErrors, LoadShopifyCustomersData, LoadShopifyCustomersResponses, LoadShopifyCustomersErrors, LoadShopifyOrdersData, LoadShopifyOrdersResponses, LoadShopifyOrdersErrors, LoadLineItemsData, LoadLineItemsResponses, LoadLineItemsErrors, GetAllMemoryBlockTemplatesData, GetAllMemoryBlockTemplatesResponses, LettaCreateMemoryBlockTemplateData, LettaCreateMemoryBlockTemplateResponses, LettaCreateMemoryBlockTemplateErrors, GetAllAssistantTemplatesData, GetAllAssistantTemplatesResponses, LettaCreateAssistantTemplateData, LettaCreateAssistantTemplateResponses, LettaCreateAssistantTemplateErrors, AssociateAssistantWithMemoryBlockData, AssociateAssistantWithMemoryBlockResponses, AssociateAssistantWithMemoryBlockErrors, GetAllMemoryBlocksForAssistantTemplatesData, GetAllMemoryBlocksForAssistantTemplatesResponses, GetAllMemoryBlocksForAssistantTemplatesErrors, DeleteAssistantTemplateData, DeleteAssistantTemplateResponses, DeleteAssistantTemplateErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get All Businesses
 */
export const getAllBusinesses = <ThrowOnError extends boolean = false>(options?: Options<GetAllBusinessesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllBusinessesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/businesses/',
        ...options
    });
};

/**
 * Create Business
 */
export const createBusiness = <ThrowOnError extends boolean = false>(options: Options<CreateBusinessData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateBusinessResponses, CreateBusinessErrors, ThrowOnError>({
        responseType: 'json',
        url: '/businesses/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Businesses For User
 */
export const getBusinessesForUser = <ThrowOnError extends boolean = false>(options: Options<GetBusinessesForUserData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetBusinessesForUserResponses, GetBusinessesForUserErrors, ThrowOnError>({
        responseType: 'json',
        url: '/businesses/for-user',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Businesses For Supabase User
 */
export const getBusinessesForSupabaseUser = <ThrowOnError extends boolean = false>(options?: Options<GetBusinessesForSupabaseUserData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<GetBusinessesForSupabaseUserResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/businesses/for-supabase-user',
        ...options
    });
};

/**
 * Insert External Customer
 */
export const insertExternalCustomer = <ThrowOnError extends boolean = false>(options: Options<InsertExternalCustomerData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<InsertExternalCustomerResponses, InsertExternalCustomerErrors, ThrowOnError>({
        responseType: 'json',
        url: '/businesses/external-odoo-customer',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Insert External Order
 */
export const insertExternalOrder = <ThrowOnError extends boolean = false>(options: Options<InsertExternalOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<InsertExternalOrderResponses, InsertExternalOrderErrors, ThrowOnError>({
        responseType: 'json',
        url: '/businesses/external-odoo-order',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Grant Access For User
 */
export const grantAccessForUser = <ThrowOnError extends boolean = false>(options: Options<GrantAccessForUserData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GrantAccessForUserResponses, GrantAccessForUserErrors, ThrowOnError>({
        responseType: 'json',
        url: '/businesses/grant-access-for-user',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Find Business With Encoded Name
 */
export const findBusinessWithEncodedName = <ThrowOnError extends boolean = false>(options: Options<FindBusinessWithEncodedNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FindBusinessWithEncodedNameResponses, FindBusinessWithEncodedNameErrors, ThrowOnError>({
        responseType: 'json',
        url: '/businesses/find-business-with-encoded-name/{encoded_name}',
        ...options
    });
};

/**
 * Get Logo Generation Chats For Business
 */
export const getLogoGenerationChatsForBusiness = <ThrowOnError extends boolean = false>(options: Options<GetLogoGenerationChatsForBusinessData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetLogoGenerationChatsForBusinessResponses, GetLogoGenerationChatsForBusinessErrors, ThrowOnError>({
        responseType: 'json',
        url: '/chats/logo-generation',
        ...options
    });
};

/**
 * Create Logo Generation Chat
 */
export const createLogoGenerationChat = <ThrowOnError extends boolean = false>(options: Options<CreateLogoGenerationChatData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateLogoGenerationChatResponses, CreateLogoGenerationChatErrors, ThrowOnError>({
        responseType: 'json',
        url: '/chats/logo-generation',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Logo Generation Chat
 */
export const getLogoGenerationChat = <ThrowOnError extends boolean = false>(options: Options<GetLogoGenerationChatData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetLogoGenerationChatResponses, GetLogoGenerationChatErrors, ThrowOnError>({
        responseType: 'json',
        url: '/chats/logo-generation/{chat_id}',
        ...options
    });
};

/**
 * Login User
 */
export const loginUser = <ThrowOnError extends boolean = false>(options: Options<LoginUserData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoginUserResponses, LoginUserErrors, ThrowOnError>({
        responseType: 'json',
        url: '/users/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Signup Standard User
 */
export const signupStandardUser = <ThrowOnError extends boolean = false>(options: Options<SignupStandardUserData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SignupStandardUserResponses, SignupStandardUserErrors, ThrowOnError>({
        responseType: 'json',
        url: '/users/signup-standard-user',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get All Users
 */
export const getAllUsers = <ThrowOnError extends boolean = false>(options?: Options<GetAllUsersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllUsersResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/users/',
        ...options
    });
};

/**
 * Register Aurora Visit
 */
export const registerAuroraVisit = <ThrowOnError extends boolean = false>(options?: Options<RegisterAuroraVisitData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<RegisterAuroraVisitResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/misc/register-visit',
        ...options
    });
};

/**
 * Get Recent Visits
 */
export const getRecentVisits = <ThrowOnError extends boolean = false>(options?: Options<GetRecentVisitsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetRecentVisitsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/misc/get-recent-visits',
        ...options
    });
};

/**
 * Insert Ma Product For Business
 */
export const insertMaProductForBusiness = <ThrowOnError extends boolean = false>(options: Options<InsertMaProductForBusinessData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<InsertMaProductForBusinessResponses, InsertMaProductForBusinessErrors, ThrowOnError>({
        responseType: 'json',
        url: '/mercadito-alternativo/insert-ma-product-for-business',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Ma Products For Business
 */
export const getMaProductsForBusiness = <ThrowOnError extends boolean = false>(options: Options<GetMaProductsForBusinessData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMaProductsForBusinessResponses, GetMaProductsForBusinessErrors, ThrowOnError>({
        responseType: 'json',
        url: '/mercadito-alternativo/for-business/{business_url_encoded_name}',
        ...options
    });
};

/**
 * Register Sales For Ma
 * Adds a new sale and returns the UUIDs of the sales that were added to the database
 */
export const registerSalesForMa = <ThrowOnError extends boolean = false>(options: Options<RegisterSalesForMaData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<RegisterSalesForMaResponses, RegisterSalesForMaErrors, ThrowOnError>({
        responseType: 'json',
        url: '/mercadito-alternativo/register-sales',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Ma Products For Business Supabase
 */
export const getMaProductsForBusinessSupabase = <ThrowOnError extends boolean = false>(options: Options<GetMaProductsForBusinessSupabaseData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMaProductsForBusinessSupabaseResponses, GetMaProductsForBusinessSupabaseErrors, ThrowOnError>({
        responseType: 'json',
        url: '/mercadito-alternativo/for-business/{business_url_encoded_name}/supabase',
        ...options
    });
};

/**
 * Admin Get All Ma Orders
 */
export const adminGetAllMaOrders = <ThrowOnError extends boolean = false>(options?: Options<AdminGetAllMaOrdersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AdminGetAllMaOrdersResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/mercadito-alternativo/admin/get-all-ma-orders',
        ...options
    });
};

/**
 * Calculate Metric Analysis
 */
export const calculateMetricAnalysis = <ThrowOnError extends boolean = false>(options?: Options<CalculateMetricAnalysisData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<CalculateMetricAnalysisResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/mercadito-alternativo/calculate-metric-analysis',
        ...options
    });
};

/**
 * New Conversation
 */
export const newConversation = <ThrowOnError extends boolean = false>(options: Options<NewConversationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<NewConversationResponses, NewConversationErrors, ThrowOnError>({
        responseType: 'json',
        url: '/conversations/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Test New Message
 */
export const testNewMessage = <ThrowOnError extends boolean = false>(options: Options<TestNewMessageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<TestNewMessageResponses, TestNewMessageErrors, ThrowOnError>({
        responseType: 'json',
        url: '/conversationstest-new-message',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Load Orders
 */
export const loadOrders = <ThrowOnError extends boolean = false>(options: Options<LoadOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadOrdersResponses, LoadOrdersErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/pocs-for-data/load-orders',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Load Products
 */
export const loadProducts = <ThrowOnError extends boolean = false>(options: Options<LoadProductsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadProductsResponses, LoadProductsErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/pocs-for-data/load-products',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Load Customers
 */
export const loadCustomers = <ThrowOnError extends boolean = false>(options: Options<LoadCustomersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadCustomersResponses, LoadCustomersErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/pocs-for-data/load-customers',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Load Order Line Items
 */
export const loadOrderLineItems = <ThrowOnError extends boolean = false>(options: Options<LoadOrderLineItemsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadOrderLineItemsResponses, LoadOrderLineItemsErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/pocs-for-data/load-order-line-items',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Orders Per Month
 */
export const ordersPerMonth = <ThrowOnError extends boolean = false>(options: Options<OrdersPerMonthData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<OrdersPerMonthResponses, OrdersPerMonthErrors, ThrowOnError>({
        responseType: 'json',
        url: '/pocs-data-analysis/orders-per-month',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Geocode Addresses For Businesses
 */
export const geocodeAddressesForBusinesses = <ThrowOnError extends boolean = false>(options: Options<GeocodeAddressesForBusinessesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GeocodeAddressesForBusinessesResponses, GeocodeAddressesForBusinessesErrors, ThrowOnError>({
        responseType: 'json',
        url: '/geo-data/geocode-addresses-for-businesses',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Load Postal Code Mapping
 */
export const loadPostalCodeMapping = <ThrowOnError extends boolean = false>(options: Options<LoadPostalCodeMappingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadPostalCodeMappingResponses, LoadPostalCodeMappingErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/geo-data/load-postal-code-mapping',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Load Shopify Addresses
 */
export const loadShopifyAddresses = <ThrowOnError extends boolean = false>(options: Options<LoadShopifyAddressesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadShopifyAddressesResponses, LoadShopifyAddressesErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/shopify-data-ingestion/load-addresses',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Load Shopify Products
 */
export const loadShopifyProducts = <ThrowOnError extends boolean = false>(options: Options<LoadShopifyProductsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadShopifyProductsResponses, LoadShopifyProductsErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/shopify-data-ingestion/load-products',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Load Shopify Product Variants
 */
export const loadShopifyProductVariants = <ThrowOnError extends boolean = false>(options: Options<LoadShopifyProductVariantsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadShopifyProductVariantsResponses, LoadShopifyProductVariantsErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/shopify-data-ingestion/load-product-variants',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Load Shopify Customers
 */
export const loadShopifyCustomers = <ThrowOnError extends boolean = false>(options: Options<LoadShopifyCustomersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadShopifyCustomersResponses, LoadShopifyCustomersErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/shopify-data-ingestion/load-customers',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Load Shopify Orders
 */
export const loadShopifyOrders = <ThrowOnError extends boolean = false>(options: Options<LoadShopifyOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadShopifyOrdersResponses, LoadShopifyOrdersErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/shopify-data-ingestion/load-orders',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Load Line Items
 */
export const loadLineItems = <ThrowOnError extends boolean = false>(options: Options<LoadLineItemsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoadLineItemsResponses, LoadLineItemsErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/shopify-data-ingestion/load-line-items',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Get All Memory Block Templates
 */
export const getAllMemoryBlockTemplates = <ThrowOnError extends boolean = false>(options?: Options<GetAllMemoryBlockTemplatesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllMemoryBlockTemplatesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/memory-block-templates/',
        ...options
    });
};

/**
 * Letta Create Memory Block Template
 */
export const lettaCreateMemoryBlockTemplate = <ThrowOnError extends boolean = false>(options: Options<LettaCreateMemoryBlockTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LettaCreateMemoryBlockTemplateResponses, LettaCreateMemoryBlockTemplateErrors, ThrowOnError>({
        responseType: 'json',
        url: '/memory-block-templates/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get All Assistant Templates
 */
export const getAllAssistantTemplates = <ThrowOnError extends boolean = false>(options?: Options<GetAllAssistantTemplatesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllAssistantTemplatesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/assistant-templates/',
        ...options
    });
};

/**
 * Letta Create Assistant Template
 */
export const lettaCreateAssistantTemplate = <ThrowOnError extends boolean = false>(options: Options<LettaCreateAssistantTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LettaCreateAssistantTemplateResponses, LettaCreateAssistantTemplateErrors, ThrowOnError>({
        responseType: 'json',
        url: '/assistant-templates/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Associate Assistant With Memory Block
 */
export const associateAssistantWithMemoryBlock = <ThrowOnError extends boolean = false>(options: Options<AssociateAssistantWithMemoryBlockData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AssociateAssistantWithMemoryBlockResponses, AssociateAssistantWithMemoryBlockErrors, ThrowOnError>({
        responseType: 'json',
        url: '/assistant-templates/associate-with-memory-block',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get All Memory Blocks For Assistant Templates
 */
export const getAllMemoryBlocksForAssistantTemplates = <ThrowOnError extends boolean = false>(options: Options<GetAllMemoryBlocksForAssistantTemplatesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetAllMemoryBlocksForAssistantTemplatesResponses, GetAllMemoryBlocksForAssistantTemplatesErrors, ThrowOnError>({
        responseType: 'json',
        url: '/assistant-templates/get-all-memory-blocks-for-assistant-templates',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Assistant Template
 */
export const deleteAssistantTemplate = <ThrowOnError extends boolean = false>(options: Options<DeleteAssistantTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<DeleteAssistantTemplateResponses, DeleteAssistantTemplateErrors, ThrowOnError>({
        responseType: 'json',
        url: '/assistant-templates/delete-assistant-template',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};